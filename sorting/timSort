#include<bits/stdc++.h>
using namespace std;
int run=32;
void insertionSort(vector<int>& arr, int l, int r)
{
	for (int i = l + 1; i <= r; i++)
	{
		int temp = arr[i];
		int j = i - 1;
		while (j >= l && arr[j] > temp)
		{
			arr[j+1] = arr[j];
			j--;
		}
		arr[j+1] = temp;
	}
}

void mergeFn(vector<int>& v,int l,int mid,int r){
    int len1=mid-l+1,len2=r-mid;
    vector<int> left,right;
    for(int i=l;i<=mid;i++){
        left.push_back(v[i]);
    }
    for(int i=mid+1;i<=r;i++){
        right.push_back(v[i]);
    }
    int i=0,j=0,k=l;
    while(i<len1&&j<len2){
        if(left[i]<=right[j]){
            v[k]=left[i];
            i++,k++;
        }
        else{
            v[k]=right[j];
            j++,k++;
        }
    }
    while(i<len1){
        v[k]=left[i];
        i++,k++;
    }
    while(j<len2){
        v[k]=right[j];
        j++,k++;
    }
}

void timSort(vector<int>& v,int n){

    for(int i=0;i<n;i+=run){
        insertionSort(v,i,min(i+run-1,n-1));
    }

    for(int size1=run;size1<n;size1*=2){
        for(int i=0;i<n;i+=2*size1){
            int mid=i+size1-1;
            int r=min(i+2*size1-1,n-1);
            if(mid<r){
                mergeFn(v,i,mid,r);
            }
        }
    }
}

int main(){
    int n;
    cin>>n;
    vector<int> v(n,0);
    for(int i=0;i<n;i++){
        cin>>v[i];
    }

    timSort(v,n);

    for(int i=0;i<n;i++){
        cout<<v[i]<<" ";
    }
    return 0;
}

